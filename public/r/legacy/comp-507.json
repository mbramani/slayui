{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-507",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/calendar.json"
  ],
  "files": [
    {
      "path": "registry/default/components/comp-507.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Calendar } from \"@/registry/default/ui/calendar\";\nimport {\n  endOfMonth,\n  endOfYear,\n  startOfMonth,\n  startOfYear,\n  subDays,\n  subMonths,\n  subYears,\n} from \"date-fns\";\nimport { useState } from \"react\";\nimport { DateRange } from \"react-day-picker\";\n\nexport default function Component() {\n  const today = new Date();\n  const yesterday = {\n    from: subDays(today, 1),\n    to: subDays(today, 1),\n  };\n  const last7Days = {\n    from: subDays(today, 6),\n    to: today,\n  };\n  const last30Days = {\n    from: subDays(today, 29),\n    to: today,\n  };\n  const monthToDate = {\n    from: startOfMonth(today),\n    to: today,\n  };\n  const lastMonth = {\n    from: startOfMonth(subMonths(today, 1)),\n    to: endOfMonth(subMonths(today, 1)),\n  };\n  const yearToDate = {\n    from: startOfYear(today),\n    to: today,\n  };\n  const lastYear = {\n    from: startOfYear(subYears(today, 1)),\n    to: endOfYear(subYears(today, 1)),\n  };\n  const [month, setMonth] = useState(today);\n  const [date, setDate] = useState<DateRange | undefined>(last7Days);\n\n  return (\n    <div>\n      <div className=\"rounded-lg border border-border\">\n        <div className=\"flex max-sm:flex-col\">\n          <div className=\"relative border-border py-4 max-sm:order-1 max-sm:border-t sm:w-32\">\n            <div className=\"h-full border-border sm:border-e\">\n              <div className=\"flex flex-col px-2\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate({\n                      from: today,\n                      to: today,\n                    });\n                    setMonth(today);\n                  }}\n                >\n                  Today\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(yesterday);\n                    setMonth(yesterday.to);\n                  }}\n                >\n                  Yesterday\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(last7Days);\n                    setMonth(last7Days.to);\n                  }}\n                >\n                  Last 7 days\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(last30Days);\n                    setMonth(last30Days.to);\n                  }}\n                >\n                  Last 30 days\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(monthToDate);\n                    setMonth(monthToDate.to);\n                  }}\n                >\n                  Month to date\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(lastMonth);\n                    setMonth(lastMonth.to);\n                  }}\n                >\n                  Last month\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(yearToDate);\n                    setMonth(yearToDate.to);\n                  }}\n                >\n                  Year to date\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full justify-start\"\n                  onClick={() => {\n                    setDate(lastYear);\n                    setMonth(lastYear.to);\n                  }}\n                >\n                  Last year\n                </Button>\n              </div>\n            </div>\n          </div>\n          <Calendar\n            mode=\"range\"\n            selected={date}\n            onSelect={(newDate) => {\n              if (newDate) {\n                setDate(newDate);\n              }\n            }}\n            month={month}\n            onMonthChange={setMonth}\n            className=\"p-2\"\n            disabled={[\n              { after: today }, // Dates before today\n            ]}\n          />\n        </div>\n      </div>\n      <p\n        className=\"mt-4 text-center text-xs text-muted-foreground\"\n        role=\"region\"\n        aria-live=\"polite\"\n      >\n        Range calendar with presets -{\" \"}\n        <a\n          className=\"underline hover:text-foreground\"\n          href=\"https://daypicker.dev/\"\n          target=\"_blank\"\n          rel=\"noopener nofollow\"\n        >\n          React DayPicker\n        </a>\n      </p>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "calendar",
      "range calendar",
      "date",
      "button",
      "react daypicker"
    ],
    "colSpan": 3,
    "style": 1
  }
}