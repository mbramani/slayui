{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar-rac",
  "type": "registry:ui",
  "dependencies": [
    "react-aria-components",
    "@internationalized/date"
  ],
  "files": [
    {
      "path": "registry/default/ui/calendar-rac.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { ComponentProps } from \"react\";\nimport {\n  Button,\n  CalendarCell as CalendarCellRac,\n  CalendarGridBody as CalendarGridBodyRac,\n  CalendarGridHeader as CalendarGridHeaderRac,\n  CalendarGrid as CalendarGridRac,\n  CalendarHeaderCell as CalendarHeaderCellRac,\n  Calendar as CalendarRac,\n  Heading as HeadingRac,\n  RangeCalendar as RangeCalendarRac,\n  composeRenderProps,\n} from \"react-aria-components\";\n\ninterface BaseCalendarProps {\n  className?: string;\n}\n\ntype CalendarProps = ComponentProps<typeof CalendarRac> & BaseCalendarProps;\ntype RangeCalendarProps = ComponentProps<typeof RangeCalendarRac> & BaseCalendarProps;\n\nconst CalendarHeader = () => (\n  <header className=\"flex w-full items-center gap-1 pb-1\">\n    <Button\n      slot=\"previous\"\n      className=\"flex size-9 items-center justify-center rounded-lg text-muted-foreground/80 outline-offset-2 transition-colors hover:bg-accent hover:text-foreground focus:outline-none data-[focus-visible]:outline data-[focus-visible]:outline-2 data-[focus-visible]:outline-ring/70\"\n    >\n      <ChevronLeft size={16} strokeWidth={2} />\n    </Button>\n    <HeadingRac className=\"grow text-center text-sm font-medium\" />\n    <Button\n      slot=\"next\"\n      className=\"flex size-9 items-center justify-center rounded-lg text-muted-foreground/80 outline-offset-2 transition-colors hover:bg-accent hover:text-foreground focus:outline-none data-[focus-visible]:outline data-[focus-visible]:outline-2 data-[focus-visible]:outline-ring/70\"\n    >\n      <ChevronRight size={16} strokeWidth={2} />\n    </Button>\n  </header>\n);\n\nconst CalendarGridComponent = ({ isRange = false }: { isRange?: boolean }) => {\n  const now = today(getLocalTimeZone());\n\n  return (\n    <CalendarGridRac>\n      <CalendarGridHeaderRac>\n        {(day) => (\n          <CalendarHeaderCellRac className=\"size-9 rounded-lg p-0 text-xs font-medium text-muted-foreground/80\">\n            {day}\n          </CalendarHeaderCellRac>\n        )}\n      </CalendarGridHeaderRac>\n      <CalendarGridBodyRac className=\"[&_td]:px-0\">\n        {(date) => (\n          <CalendarCellRac\n            date={date}\n            className={cn(\n              \"relative flex size-9 items-center justify-center whitespace-nowrap rounded-lg border border-transparent p-0 text-sm font-normal text-foreground outline-offset-2 duration-150 [transition-property:color,background-color,border-radius,box-shadow] focus:outline-none data-[disabled]:pointer-events-none data-[unavailable]:pointer-events-none data-[focus-visible]:z-10 data-[hovered]:bg-accent data-[selected]:bg-primary data-[hovered]:text-foreground data-[selected]:text-primary-foreground data-[unavailable]:line-through data-[disabled]:opacity-30 data-[unavailable]:opacity-30 data-[focus-visible]:outline data-[focus-visible]:outline-2 data-[focus-visible]:outline-ring/70\",\n              // Range-specific styles\n              isRange &&\n                \"data-[selected]:rounded-none data-[selection-end]:rounded-e-lg data-[selection-start]:rounded-s-lg data-[invalid]:bg-red-100 data-[selected]:bg-accent data-[selected]:text-foreground data-[invalid]:data-[selection-end]:[&:not([data-hover])]:bg-destructive data-[invalid]:data-[selection-start]:[&:not([data-hover])]:bg-destructive data-[selection-end]:[&:not([data-hover])]:bg-primary data-[selection-start]:[&:not([data-hover])]:bg-primary data-[invalid]:data-[selection-end]:[&:not([data-hover])]:text-destructive-foreground data-[invalid]:data-[selection-start]:[&:not([data-hover])]:text-destructive-foreground data-[selection-end]:[&:not([data-hover])]:text-primary-foreground data-[selection-start]:[&:not([data-hover])]:text-primary-foreground\",\n              // Today indicator styles\n              date.compare(now) === 0 &&\n                cn(\n                  \"after:pointer-events-none after:absolute after:bottom-1 after:start-1/2 after:z-10 after:size-[3px] after:-translate-x-1/2 after:rounded-full after:bg-primary\",\n                  isRange\n                    ? \"data-[selection-end]:[&:not([data-hover])]:after:bg-background data-[selection-start]:[&:not([data-hover])]:after:bg-background\"\n                    : \"data-[selected]:after:bg-background\",\n                ),\n            )}\n          />\n        )}\n      </CalendarGridBodyRac>\n    </CalendarGridRac>\n  );\n};\n\nconst Calendar = ({ className, ...props }: CalendarProps) => {\n  return (\n    <CalendarRac\n      {...props}\n      className={composeRenderProps(className, (className) => cn(\"w-fit\", className))}\n    >\n      <CalendarHeader />\n      <CalendarGridComponent />\n    </CalendarRac>\n  );\n};\n\nconst RangeCalendar = ({ className, ...props }: RangeCalendarProps) => {\n  return (\n    <RangeCalendarRac\n      {...props}\n      className={composeRenderProps(className, (className) => cn(\"w-fit\", className))}\n    >\n      <CalendarHeader />\n      <CalendarGridComponent isRange />\n    </RangeCalendarRac>\n  );\n};\n\nexport { Calendar, RangeCalendar };\n",
      "type": "registry:ui"
    }
  ]
}