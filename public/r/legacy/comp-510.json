{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-510",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/calendar.json"
  ],
  "files": [
    {
      "path": "registry/default/components/comp-510.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\nimport { Calendar } from \"@/registry/default/ui/calendar\";\nimport { format } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport { DayButtonProps } from \"react-day-picker\";\n\nconst GOOD_PRICE_THRESHOLD = 100;\n\nexport default function Component() {\n  const today = new Date();\n  const [date, setDate] = useState<Date | undefined>(today);\n\n  // Mock price data\n  const [mockPriceData, setMockPriceData] = useState<Record<string, number>>({});\n  useEffect(() => {\n    const generateMockPriceData = () => {\n      const data: Record<string, number> = {};\n\n      for (let i = 0; i < 180; i++) {\n        const date = new Date(today);\n        date.setDate(today.getDate() + i);\n        const dateKey = format(date, \"yyyy-MM-dd\");\n        const randomPrice = Math.floor(Math.random() * (200 - 80 + 1)) + 80;\n        data[dateKey] = randomPrice;\n      }\n      return data;\n    };\n    setMockPriceData(generateMockPriceData());\n  }, []);\n\n  const isDateDisabled = (date: Date) => {\n    return !mockPriceData[format(date, \"yyyy-MM-dd\")];\n  };\n\n  return (\n    <div>\n      <Calendar\n        mode=\"single\"\n        selected={date}\n        onSelect={setDate}\n        numberOfMonths={2}\n        pagedNavigation\n        showOutsideDays={false}\n        className=\"rounded-lg border border-border p-2\"\n        classNames={{\n          months: \"sm:flex-col md:flex-row gap-8\",\n          month:\n            \"relative first-of-type:before:hidden before:absolute max-md:before:inset-x-2 max-md:before:h-px max-md:before:-top-4 md:before:inset-y-2 md:before:w-px before:bg-border md:before:-left-4\",\n          weekday: \"w-12\",\n          day_button: \"size-12\",\n          today: \"*:after:hidden\",\n        }}\n        components={{\n          DayButton: (props: DayButtonProps) => <DayButton {...props} prices={mockPriceData} />,\n        }}\n        disabled={isDateDisabled}\n      />\n      <p\n        className=\"mt-4 text-center text-xs text-muted-foreground\"\n        role=\"region\"\n        aria-live=\"polite\"\n      >\n        Pricing calendar -{\" \"}\n        <a\n          className=\"underline hover:text-foreground\"\n          href=\"https://daypicker.dev/\"\n          target=\"_blank\"\n          rel=\"noopener nofollow\"\n        >\n          React DayPicker\n        </a>\n      </p>\n    </div>\n  );\n}\n\nfunction DayButton(props: DayButtonProps & { prices: Record<string, number> }) {\n  const { day, modifiers, prices, ...buttonProps } = props;\n  const price = prices[format(day.date, \"yyyy-MM-dd\")];\n  const isGoodPrice = price < GOOD_PRICE_THRESHOLD;\n\n  return (\n    <button {...buttonProps}>\n      <span className=\"flex flex-col\">\n        {props.children}\n        {price && (\n          <span\n            className={cn(\n              \"text-[10px] font-medium\",\n              isGoodPrice\n                ? \"text-emerald-500\"\n                : \"text-muted-foreground group-data-[selected]:text-primary-foreground/70\",\n            )}\n          >\n            ${price}\n          </span>\n        )}\n      </span>\n    </button>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "calendar",
      "date",
      "react daypicker"
    ],
    "colSpan": 3,
    "style": 1
  }
}