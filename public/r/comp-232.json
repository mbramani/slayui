{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-232",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/command.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "path": "registry/default/components/comp-232.tsx",
      "content": "\"use client\"\n\nimport { Fragment, useId, useState } from \"react\"\nimport { CheckIcon, ChevronDownIcon } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\"\nimport { Label } from \"@/registry/default/ui/label\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/default/ui/popover\"\n\nconst countries = [\n  {\n    continent: \"America\",\n    items: [\n      { value: \"United States\", flag: \"ðŸ‡ºðŸ‡¸\" },\n      { value: \"Canada\", flag: \"ðŸ‡¨ðŸ‡¦\" },\n      { value: \"Mexico\", flag: \"ðŸ‡²ðŸ‡½\" },\n    ],\n  },\n  {\n    continent: \"Africa\",\n    items: [\n      { value: \"South Africa\", flag: \"ðŸ‡¿ðŸ‡¦\" },\n      { value: \"Nigeria\", flag: \"ðŸ‡³ðŸ‡¬\" },\n      { value: \"Morocco\", flag: \"ðŸ‡²ðŸ‡¦\" },\n    ],\n  },\n  {\n    continent: \"Asia\",\n    items: [\n      { value: \"China\", flag: \"ðŸ‡¨ðŸ‡³\" },\n      { value: \"Japan\", flag: \"ðŸ‡¯ðŸ‡µ\" },\n      { value: \"India\", flag: \"ðŸ‡®ðŸ‡³\" },\n    ],\n  },\n  {\n    continent: \"Europe\",\n    items: [\n      { value: \"United Kingdom\", flag: \"ðŸ‡¬ðŸ‡§\" },\n      { value: \"France\", flag: \"ðŸ‡«ðŸ‡·\" },\n      { value: \"Germany\", flag: \"ðŸ‡©ðŸ‡ª\" },\n    ],\n  },\n  {\n    continent: \"Oceania\",\n    items: [\n      { value: \"Australia\", flag: \"ðŸ‡¦ðŸ‡º\" },\n      { value: \"New Zealand\", flag: \"ðŸ‡³ðŸ‡¿\" },\n    ],\n  },\n]\n\nexport default function Component() {\n  const id = useId()\n  const [open, setOpen] = useState<boolean>(false)\n  const [value, setValue] = useState<string>(\"\")\n\n  return (\n    <div className=\"*:not-first:mt-2\">\n      <Label htmlFor={id}>Options with flag and search</Label>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            id={id}\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={open}\n            className=\"bg-background hover:bg-background border-input w-full justify-between px-3 font-normal outline-offset-0 outline-none focus-visible:outline-[3px]\"\n          >\n            {value ? (\n              <span className=\"flex min-w-0 items-center gap-2\">\n                <span className=\"text-lg leading-none\">\n                  {\n                    countries\n                      .map((group) =>\n                        group.items.find((item) => item.value === value)\n                      )\n                      .filter(Boolean)[0]?.flag\n                  }\n                </span>\n                <span className=\"truncate\">{value}</span>\n              </span>\n            ) : (\n              <span className=\"text-muted-foreground\">Select country</span>\n            )}\n            <ChevronDownIcon\n              size={16}\n              className=\"text-muted-foreground/80 shrink-0\"\n              aria-hidden=\"true\"\n            />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"border-input w-full min-w-[var(--radix-popper-anchor-width)] p-0\"\n          align=\"start\"\n        >\n          <Command>\n            <CommandInput placeholder=\"Search country...\" />\n            <CommandList>\n              <CommandEmpty>No country found.</CommandEmpty>\n              {countries.map((group) => (\n                <Fragment key={group.continent}>\n                  <CommandGroup heading={group.continent}>\n                    {group.items.map((country) => (\n                      <CommandItem\n                        key={country.value}\n                        value={country.value}\n                        onSelect={(currentValue) => {\n                          setValue(currentValue)\n                          setOpen(false)\n                        }}\n                      >\n                        <span className=\"text-lg leading-none\">\n                          {country.flag}\n                        </span>{\" \"}\n                        {country.value}\n                        {value === country.value && (\n                          <CheckIcon size={16} className=\"ml-auto\" />\n                        )}\n                      </CommandItem>\n                    ))}\n                  </CommandGroup>\n                </Fragment>\n              ))}\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "label",
      "select",
      "command",
      "combobox",
      "popover",
      "search",
      "autocomplete",
      "flag",
      "radix"
    ]
  }
}